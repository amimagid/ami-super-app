"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/sequelize-pool";
exports.ids = ["vendor-chunks/sequelize-pool"];
exports.modules = {

/***/ "(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js":
/*!***********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/AggregateError.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.AggregateError = void 0;\nclass AggregateError extends Error {\n    constructor(errors){\n        super();\n        this.errors = errors;\n        this.name = \"AggregateError\";\n    }\n    toString() {\n        const message = `AggregateError of:\\n${this.errors.map((error)=>error === this ? \"[Circular AggregateError]\" : error instanceof AggregateError ? String(error).replace(/\\n$/, \"\").replace(/^/gm, \"  \") : String(error).replace(/^/gm, \"    \").substring(2)).join(\"\\n\")}\\n`;\n        return message;\n    }\n}\nexports.AggregateError = AggregateError; //# sourceMappingURL=AggregateError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0FnZ3JlZ2F0ZUVycm9yLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxzQkFBc0IsR0FBRyxLQUFLO0FBQzlCLE1BQU1FLHVCQUF1QkM7SUFDekJDLFlBQVlDLE1BQU0sQ0FBRTtRQUNoQixLQUFLO1FBQ0wsSUFBSSxDQUFDQSxNQUFNLEdBQUdBO1FBQ2QsSUFBSSxDQUFDQyxJQUFJLEdBQUc7SUFDaEI7SUFDQUMsV0FBVztRQUNQLE1BQU1DLFVBQVUsQ0FBQyxvQkFBb0IsRUFBRSxJQUFJLENBQUNILE1BQU0sQ0FDN0NJLEdBQUcsQ0FBQyxDQUFDQyxRQUFVQSxVQUFVLElBQUksR0FDNUIsOEJBQ0FBLGlCQUFpQlIsaUJBQ2JTLE9BQU9ELE9BQU9FLE9BQU8sQ0FBQyxPQUFPLElBQUlBLE9BQU8sQ0FBQyxPQUFPLFFBQ2hERCxPQUFPRCxPQUFPRSxPQUFPLENBQUMsT0FBTyxRQUFRQyxTQUFTLENBQUMsSUFDcERDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztRQUNuQixPQUFPTjtJQUNYO0FBQ0o7QUFDQVIsc0JBQXNCLEdBQUdFLGdCQUN6QiwwQ0FBMEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbWktc3VwZXItYXBwLy4vbm9kZV9tb2R1bGVzL3NlcXVlbGl6ZS1wb29sL2xpYi9BZ2dyZWdhdGVFcnJvci5qcz81MDk0Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IHZvaWQgMDtcbmNsYXNzIEFnZ3JlZ2F0ZUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKGVycm9ycykge1xuICAgICAgICBzdXBlcigpO1xuICAgICAgICB0aGlzLmVycm9ycyA9IGVycm9ycztcbiAgICAgICAgdGhpcy5uYW1lID0gJ0FnZ3JlZ2F0ZUVycm9yJztcbiAgICB9XG4gICAgdG9TdHJpbmcoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSBgQWdncmVnYXRlRXJyb3Igb2Y6XFxuJHt0aGlzLmVycm9yc1xuICAgICAgICAgICAgLm1hcCgoZXJyb3IpID0+IGVycm9yID09PSB0aGlzXG4gICAgICAgICAgICA/ICdbQ2lyY3VsYXIgQWdncmVnYXRlRXJyb3JdJ1xuICAgICAgICAgICAgOiBlcnJvciBpbnN0YW5jZW9mIEFnZ3JlZ2F0ZUVycm9yXG4gICAgICAgICAgICAgICAgPyBTdHJpbmcoZXJyb3IpLnJlcGxhY2UoL1xcbiQvLCAnJykucmVwbGFjZSgvXi9nbSwgJyAgJylcbiAgICAgICAgICAgICAgICA6IFN0cmluZyhlcnJvcikucmVwbGFjZSgvXi9nbSwgJyAgICAnKS5zdWJzdHJpbmcoMikpXG4gICAgICAgICAgICAuam9pbignXFxuJyl9XFxuYDtcbiAgICAgICAgcmV0dXJuIG1lc3NhZ2U7XG4gICAgfVxufVxuZXhwb3J0cy5BZ2dyZWdhdGVFcnJvciA9IEFnZ3JlZ2F0ZUVycm9yO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9QWdncmVnYXRlRXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiQWdncmVnYXRlRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwiZXJyb3JzIiwibmFtZSIsInRvU3RyaW5nIiwibWVzc2FnZSIsIm1hcCIsImVycm9yIiwiU3RyaW5nIiwicmVwbGFjZSIsInN1YnN0cmluZyIsImpvaW4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Deferred.js":
/*!*****************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Deferred.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Deferred = void 0;\nconst TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nclass Deferred {\n    constructor(){\n        this._promise = new Promise((resolve, reject)=>{\n            this._reject = reject;\n            this._resolve = resolve;\n        });\n    }\n    registerTimeout(timeoutInMillis, callback) {\n        if (this._timeout) return;\n        this._timeout = setTimeout(()=>{\n            callback();\n            this.reject(new TimeoutError_1.TimeoutError(\"Operation timeout\"));\n        }, timeoutInMillis);\n    }\n    _clearTimeout() {\n        if (!this._timeout) return;\n        clearTimeout(this._timeout);\n    }\n    resolve(value) {\n        this._clearTimeout();\n        this._resolve(value);\n    }\n    reject(error) {\n        this._clearTimeout();\n        this._reject(error);\n    }\n    promise() {\n        return this._promise;\n    }\n}\nexports.Deferred = Deferred; //# sourceMappingURL=Deferred.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL0RlZmVycmVkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxnQkFBZ0IsR0FBRyxLQUFLO0FBQ3hCLE1BQU1HLGlCQUFpQkMsbUJBQU9BLENBQUMsK0VBQWdCO0FBQy9DLE1BQU1GO0lBQ0ZHLGFBQWM7UUFDVixJQUFJLENBQUNDLFFBQVEsR0FBRyxJQUFJQyxRQUFRLENBQUNDLFNBQVNDO1lBQ2xDLElBQUksQ0FBQ0MsT0FBTyxHQUFHRDtZQUNmLElBQUksQ0FBQ0UsUUFBUSxHQUFHSDtRQUNwQjtJQUNKO0lBQ0FJLGdCQUFnQkMsZUFBZSxFQUFFQyxRQUFRLEVBQUU7UUFDdkMsSUFBSSxJQUFJLENBQUNDLFFBQVEsRUFDYjtRQUNKLElBQUksQ0FBQ0EsUUFBUSxHQUFHQyxXQUFXO1lBQ3ZCRjtZQUNBLElBQUksQ0FBQ0wsTUFBTSxDQUFDLElBQUlOLGVBQWVjLFlBQVksQ0FBQztRQUNoRCxHQUFHSjtJQUNQO0lBQ0FLLGdCQUFnQjtRQUNaLElBQUksQ0FBQyxJQUFJLENBQUNILFFBQVEsRUFDZDtRQUNKSSxhQUFhLElBQUksQ0FBQ0osUUFBUTtJQUM5QjtJQUNBUCxRQUFRUCxLQUFLLEVBQUU7UUFDWCxJQUFJLENBQUNpQixhQUFhO1FBQ2xCLElBQUksQ0FBQ1AsUUFBUSxDQUFDVjtJQUNsQjtJQUNBUSxPQUFPVyxLQUFLLEVBQUU7UUFDVixJQUFJLENBQUNGLGFBQWE7UUFDbEIsSUFBSSxDQUFDUixPQUFPLENBQUNVO0lBQ2pCO0lBQ0FDLFVBQVU7UUFDTixPQUFPLElBQUksQ0FBQ2YsUUFBUTtJQUN4QjtBQUNKO0FBQ0FOLGdCQUFnQixHQUFHRSxVQUNuQixvQ0FBb0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbWktc3VwZXItYXBwLy4vbm9kZV9tb2R1bGVzL3NlcXVlbGl6ZS1wb29sL2xpYi9EZWZlcnJlZC5qcz8zZjY5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5EZWZlcnJlZCA9IHZvaWQgMDtcbmNvbnN0IFRpbWVvdXRFcnJvcl8xID0gcmVxdWlyZShcIi4vVGltZW91dEVycm9yXCIpO1xuY2xhc3MgRGVmZXJyZWQge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLl9wcm9taXNlID0gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5fcmVqZWN0ID0gcmVqZWN0O1xuICAgICAgICAgICAgdGhpcy5fcmVzb2x2ZSA9IHJlc29sdmU7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZWdpc3RlclRpbWVvdXQodGltZW91dEluTWlsbGlzLCBjYWxsYmFjaykge1xuICAgICAgICBpZiAodGhpcy5fdGltZW91dClcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5fdGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgIHRoaXMucmVqZWN0KG5ldyBUaW1lb3V0RXJyb3JfMS5UaW1lb3V0RXJyb3IoJ09wZXJhdGlvbiB0aW1lb3V0JykpO1xuICAgICAgICB9LCB0aW1lb3V0SW5NaWxsaXMpO1xuICAgIH1cbiAgICBfY2xlYXJUaW1lb3V0KCkge1xuICAgICAgICBpZiAoIXRoaXMuX3RpbWVvdXQpXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0KTtcbiAgICB9XG4gICAgcmVzb2x2ZSh2YWx1ZSkge1xuICAgICAgICB0aGlzLl9jbGVhclRpbWVvdXQoKTtcbiAgICAgICAgdGhpcy5fcmVzb2x2ZSh2YWx1ZSk7XG4gICAgfVxuICAgIHJlamVjdChlcnJvcikge1xuICAgICAgICB0aGlzLl9jbGVhclRpbWVvdXQoKTtcbiAgICAgICAgdGhpcy5fcmVqZWN0KGVycm9yKTtcbiAgICB9XG4gICAgcHJvbWlzZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX3Byb21pc2U7XG4gICAgfVxufVxuZXhwb3J0cy5EZWZlcnJlZCA9IERlZmVycmVkO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9RGVmZXJyZWQuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiRGVmZXJyZWQiLCJUaW1lb3V0RXJyb3JfMSIsInJlcXVpcmUiLCJjb25zdHJ1Y3RvciIsIl9wcm9taXNlIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJfcmVqZWN0IiwiX3Jlc29sdmUiLCJyZWdpc3RlclRpbWVvdXQiLCJ0aW1lb3V0SW5NaWxsaXMiLCJjYWxsYmFjayIsIl90aW1lb3V0Iiwic2V0VGltZW91dCIsIlRpbWVvdXRFcnJvciIsIl9jbGVhclRpbWVvdXQiLCJjbGVhclRpbWVvdXQiLCJlcnJvciIsInByb21pc2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/Pool.js":
/*!*************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/Pool.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Pool = void 0;\nconst Deferred_1 = __webpack_require__(/*! ./Deferred */ \"(rsc)/./node_modules/sequelize-pool/lib/Deferred.js\");\nconst AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nclass Pool {\n    constructor(factory){\n        this.log = false;\n        if (!factory.create) {\n            throw new Error(\"create function is required\");\n        }\n        if (!factory.destroy) {\n            throw new Error(\"destroy function is required\");\n        }\n        if (!factory.validate) {\n            throw new Error(\"validate function is required\");\n        }\n        if (typeof factory.min !== \"number\" || factory.min < 0 || factory.min !== Math.round(factory.min)) {\n            throw new Error(\"min must be an integer >= 0\");\n        }\n        if (typeof factory.max !== \"number\" || factory.max <= 0 || factory.max !== Math.round(factory.max)) {\n            throw new Error(\"max must be an integer > 0\");\n        }\n        if (factory.min > factory.max) {\n            throw new Error(\"max is smaller than min\");\n        }\n        if (factory.maxUses !== undefined && (typeof factory.maxUses !== \"number\" || factory.maxUses < 0)) {\n            throw new Error(\"maxUses must be an integer >= 0\");\n        }\n        this.idleTimeoutMillis = factory.idleTimeoutMillis || 30000;\n        this.acquireTimeoutMillis = factory.acquireTimeoutMillis || 30000;\n        this.reapIntervalMillis = factory.reapIntervalMillis || 1000;\n        this.maxUsesPerResource = factory.maxUses || Infinity;\n        this.log = factory.log || false;\n        this._factory = factory;\n        this._count = 0;\n        this._draining = false;\n        this._pendingAcquires = [];\n        this._inUseObjects = [];\n        this._availableObjects = [];\n        this._removeIdleScheduled = false;\n    }\n    get size() {\n        return this._count;\n    }\n    get name() {\n        return this._factory.name;\n    }\n    get available() {\n        return this._availableObjects.length;\n    }\n    get using() {\n        return this._inUseObjects.length;\n    }\n    get waiting() {\n        return this._pendingAcquires.length;\n    }\n    get maxSize() {\n        return this._factory.max;\n    }\n    get minSize() {\n        return this._factory.min;\n    }\n    _log(message, level) {\n        if (typeof this.log === \"function\") {\n            this.log(message, level);\n        } else if (this.log) {\n            console.log(`${level.toUpperCase()} pool ${this.name || \"\"} - ${message}`);\n        }\n    }\n    _removeIdle() {\n        const toRemove = [];\n        const now = Date.now();\n        let i;\n        let available = this._availableObjects.length;\n        const maxRemovable = this.size - this.minSize;\n        let timeout;\n        this._removeIdleScheduled = false;\n        for(i = 0; i < available && maxRemovable > toRemove.length; i++){\n            timeout = this._availableObjects[i].timeout;\n            if (now >= timeout) {\n                this._log(\"removeIdle() destroying obj - now:\" + now + \" timeout:\" + timeout, \"verbose\");\n                toRemove.push(this._availableObjects[i].resource);\n            }\n        }\n        toRemove.forEach(this.destroy, this);\n        available = this._availableObjects.length;\n        if (available > 0) {\n            this._log(\"this._availableObjects.length=\" + available, \"verbose\");\n            this._scheduleRemoveIdle();\n        } else {\n            this._log(\"removeIdle() all objects removed\", \"verbose\");\n        }\n    }\n    _scheduleRemoveIdle() {\n        if (!this._removeIdleScheduled) {\n            this._removeIdleScheduled = true;\n            this._removeIdleTimer = setTimeout(()=>{\n                this._removeIdle();\n            }, this.reapIntervalMillis);\n        }\n    }\n    _dispense() {\n        let wrappedResource = null;\n        const waitingCount = this._pendingAcquires.length;\n        this._log(`dispense() clients=${waitingCount} available=${this._availableObjects.length}`, \"info\");\n        if (waitingCount < 1) {\n            return;\n        }\n        while(this._availableObjects.length > 0){\n            this._log(\"dispense() - reusing obj\", \"verbose\");\n            wrappedResource = this._availableObjects[this._availableObjects.length - 1];\n            if (!this._factory.validate(wrappedResource.resource)) {\n                this.destroy(wrappedResource.resource);\n                continue;\n            }\n            this._availableObjects.pop();\n            this._addResourceToInUseObjects(wrappedResource.resource, wrappedResource.useCount);\n            const deferred = this._pendingAcquires.shift();\n            return deferred.resolve(wrappedResource.resource);\n        }\n        if (this.size < this.maxSize) {\n            this._createResource();\n        }\n    }\n    _createResource() {\n        this._count += 1;\n        this._log(`createResource() - creating obj - count=${this.size} min=${this.minSize} max=${this.maxSize}`, \"verbose\");\n        this._factory.create().then((resource)=>{\n            const deferred = this._pendingAcquires.shift();\n            if (deferred) {\n                this._addResourceToInUseObjects(resource, 0);\n                deferred.resolve(resource);\n            } else {\n                this._addResourceToAvailableObjects(resource, 0);\n            }\n        }).catch((error)=>{\n            const deferred = this._pendingAcquires.shift();\n            this._count -= 1;\n            if (this._count < 0) this._count = 0;\n            if (deferred) {\n                deferred.reject(error);\n            }\n            process.nextTick(()=>{\n                this._dispense();\n            });\n        });\n    }\n    _addResourceToAvailableObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount,\n            timeout: Date.now() + this.idleTimeoutMillis\n        };\n        this._availableObjects.push(wrappedResource);\n        this._dispense();\n        this._scheduleRemoveIdle();\n    }\n    _addResourceToInUseObjects(resource, useCount) {\n        const wrappedResource = {\n            resource: resource,\n            useCount: useCount\n        };\n        this._inUseObjects.push(wrappedResource);\n    }\n    _ensureMinimum() {\n        let i, diff;\n        if (!this._draining && this.size < this.minSize) {\n            diff = this.minSize - this.size;\n            for(i = 0; i < diff; i++){\n                this._createResource();\n            }\n        }\n    }\n    acquire() {\n        if (this._draining) {\n            return Promise.reject(new Error(\"pool is draining and cannot accept work\"));\n        }\n        const deferred = new Deferred_1.Deferred();\n        deferred.registerTimeout(this.acquireTimeoutMillis, ()=>{\n            this._pendingAcquires = this._pendingAcquires.filter((pending)=>pending !== deferred);\n        });\n        this._pendingAcquires.push(deferred);\n        this._dispense();\n        return deferred.promise();\n    }\n    release(resource) {\n        if (this._availableObjects.some((resourceWithTimeout)=>resourceWithTimeout.resource === resource)) {\n            this._log(\"release called twice for the same resource: \" + new Error().stack, \"error\");\n            return;\n        }\n        const index = this._inUseObjects.findIndex((wrappedResource)=>wrappedResource.resource === resource);\n        if (index < 0) {\n            this._log(\"attempt to release an invalid resource: \" + new Error().stack, \"error\");\n            return;\n        }\n        const wrappedResource = this._inUseObjects[index];\n        wrappedResource.useCount += 1;\n        if (wrappedResource.useCount >= this.maxUsesPerResource) {\n            this._log(\"release() destroying obj - useCount:\" + wrappedResource.useCount + \" maxUsesPerResource:\" + this.maxUsesPerResource, \"verbose\");\n            this.destroy(wrappedResource.resource);\n            this._dispense();\n        } else {\n            this._inUseObjects.splice(index, 1);\n            this._addResourceToAvailableObjects(wrappedResource.resource, wrappedResource.useCount);\n        }\n    }\n    async destroy(resource) {\n        const available = this._availableObjects.length;\n        const using = this._inUseObjects.length;\n        this._availableObjects = this._availableObjects.filter((object)=>object.resource !== resource);\n        this._inUseObjects = this._inUseObjects.filter((object)=>object.resource !== resource);\n        if (available === this._availableObjects.length && using === this._inUseObjects.length) {\n            this._ensureMinimum();\n            return;\n        }\n        this._count -= 1;\n        if (this._count < 0) this._count = 0;\n        try {\n            await this._factory.destroy(resource);\n        } finally{\n            this._ensureMinimum();\n            if (!this._draining) {\n                process.nextTick(()=>{\n                    this._dispense();\n                });\n            }\n        }\n    }\n    drain() {\n        this._log(\"draining\", \"info\");\n        this._draining = true;\n        const check = (callback)=>{\n            if (this._pendingAcquires.length > 0) {\n                this._dispense();\n                setTimeout(()=>{\n                    check(callback);\n                }, 100);\n                return;\n            }\n            if (this._availableObjects.length !== this._count) {\n                setTimeout(()=>{\n                    check(callback);\n                }, 100);\n                return;\n            }\n            callback();\n        };\n        return new Promise((resolve)=>check(resolve));\n    }\n    async destroyAllNow() {\n        this._log(\"force destroying all objects\", \"info\");\n        this._removeIdleScheduled = false;\n        clearTimeout(this._removeIdleTimer);\n        const resources = this._availableObjects.map((resource)=>resource.resource);\n        const errors = [];\n        for (const resource of resources){\n            try {\n                await this.destroy(resource);\n            } catch (ex) {\n                this._log(\"Error destroying resource: \" + ex.stack, \"error\");\n                errors.push(ex);\n            }\n        }\n        if (errors.length > 0) {\n            throw new AggregateError_1.AggregateError(errors);\n        }\n    }\n}\nexports.Pool = Pool; //# sourceMappingURL=Pool.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL1Bvb2wuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYkEsOENBQTZDO0lBQUVHLE9BQU87QUFBSyxDQUFDLEVBQUM7QUFDN0RELFlBQVksR0FBRyxLQUFLO0FBQ3BCLE1BQU1HLGFBQWFDLG1CQUFPQSxDQUFDLHVFQUFZO0FBQ3ZDLE1BQU1DLG1CQUFtQkQsbUJBQU9BLENBQUMsbUZBQWtCO0FBQ25ELE1BQU1GO0lBQ0ZJLFlBQVlDLE9BQU8sQ0FBRTtRQUNqQixJQUFJLENBQUNDLEdBQUcsR0FBRztRQUNYLElBQUksQ0FBQ0QsUUFBUUUsTUFBTSxFQUFFO1lBQ2pCLE1BQU0sSUFBSUMsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ0gsUUFBUUksT0FBTyxFQUFFO1lBQ2xCLE1BQU0sSUFBSUQsTUFBTTtRQUNwQjtRQUNBLElBQUksQ0FBQ0gsUUFBUUssUUFBUSxFQUFFO1lBQ25CLE1BQU0sSUFBSUYsTUFBTTtRQUNwQjtRQUNBLElBQUksT0FBT0gsUUFBUU0sR0FBRyxLQUFLLFlBQ3ZCTixRQUFRTSxHQUFHLEdBQUcsS0FDZE4sUUFBUU0sR0FBRyxLQUFLQyxLQUFLQyxLQUFLLENBQUNSLFFBQVFNLEdBQUcsR0FBRztZQUN6QyxNQUFNLElBQUlILE1BQU07UUFDcEI7UUFDQSxJQUFJLE9BQU9ILFFBQVFTLEdBQUcsS0FBSyxZQUN2QlQsUUFBUVMsR0FBRyxJQUFJLEtBQ2ZULFFBQVFTLEdBQUcsS0FBS0YsS0FBS0MsS0FBSyxDQUFDUixRQUFRUyxHQUFHLEdBQUc7WUFDekMsTUFBTSxJQUFJTixNQUFNO1FBQ3BCO1FBQ0EsSUFBSUgsUUFBUU0sR0FBRyxHQUFHTixRQUFRUyxHQUFHLEVBQUU7WUFDM0IsTUFBTSxJQUFJTixNQUFNO1FBQ3BCO1FBQ0EsSUFBSUgsUUFBUVUsT0FBTyxLQUFLQyxhQUNuQixRQUFPWCxRQUFRVSxPQUFPLEtBQUssWUFBWVYsUUFBUVUsT0FBTyxHQUFHLElBQUk7WUFD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QUloQixRQUFRLENBQUNaLFVBQVkyQixNQUFNM0I7SUFDMUM7SUFDQSxNQUFNNkIsZ0JBQWdCO1FBQ2xCLElBQUksQ0FBQ3ZELElBQUksQ0FBQyxnQ0FBZ0M7UUFDMUMsSUFBSSxDQUFDVCxvQkFBb0IsR0FBRztRQUM1QmlFLGFBQWEsSUFBSSxDQUFDeEMsZ0JBQWdCO1FBQ2xDLE1BQU15QyxZQUFZLElBQUksQ0FBQ25FLGlCQUFpQixDQUFDb0UsR0FBRyxDQUFDLENBQUM3QyxXQUFhQSxTQUFTQSxRQUFRO1FBQzVFLE1BQU04QyxTQUFTLEVBQUU7UUFDakIsS0FBSyxNQUFNOUMsWUFBWTRDLFVBQVc7WUFDOUIsSUFBSTtnQkFDQSxNQUFNLElBQUksQ0FBQ3JGLE9BQU8sQ0FBQ3lDO1lBQ3ZCLEVBQ0EsT0FBTytDLElBQUk7Z0JBQ1AsSUFBSSxDQUFDNUQsSUFBSSxDQUFDLGdDQUFnQzRELEdBQUdiLEtBQUssRUFBRTtnQkFDcERZLE9BQU8vQyxJQUFJLENBQUNnRDtZQUNoQjtRQUNKO1FBQ0EsSUFBSUQsT0FBT2hFLE1BQU0sR0FBRyxHQUFHO1lBQ25CLE1BQU0sSUFBSTdCLGlCQUFpQitGLGNBQWMsQ0FBQ0Y7UUFDOUM7SUFDSjtBQUNKO0FBQ0FsRyxZQUFZLEdBQUdFLE1BQ2YsZ0NBQWdDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYW1pLXN1cGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvUG9vbC5qcz9jOGYxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Qb29sID0gdm9pZCAwO1xuY29uc3QgRGVmZXJyZWRfMSA9IHJlcXVpcmUoXCIuL0RlZmVycmVkXCIpO1xuY29uc3QgQWdncmVnYXRlRXJyb3JfMSA9IHJlcXVpcmUoXCIuL0FnZ3JlZ2F0ZUVycm9yXCIpO1xuY2xhc3MgUG9vbCB7XG4gICAgY29uc3RydWN0b3IoZmFjdG9yeSkge1xuICAgICAgICB0aGlzLmxvZyA9IGZhbHNlO1xuICAgICAgICBpZiAoIWZhY3RvcnkuY3JlYXRlKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyZWF0ZSBmdW5jdGlvbiBpcyByZXF1aXJlZCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmICghZmFjdG9yeS5kZXN0cm95KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2Rlc3Ryb3kgZnVuY3Rpb24gaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWZhY3RvcnkudmFsaWRhdGUpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcigndmFsaWRhdGUgZnVuY3Rpb24gaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIGZhY3RvcnkubWluICE9PSAnbnVtYmVyJyB8fFxuICAgICAgICAgICAgZmFjdG9yeS5taW4gPCAwIHx8XG4gICAgICAgICAgICBmYWN0b3J5Lm1pbiAhPT0gTWF0aC5yb3VuZChmYWN0b3J5Lm1pbikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbWluIG11c3QgYmUgYW4gaW50ZWdlciA+PSAwJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHR5cGVvZiBmYWN0b3J5Lm1heCAhPT0gJ251bWJlcicgfHxcbiAgICAgICAgICAgIGZhY3RvcnkubWF4IDw9IDAgfHxcbiAgICAgICAgICAgIGZhY3RvcnkubWF4ICE9PSBNYXRoLnJvdW5kKGZhY3RvcnkubWF4KSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdtYXggbXVzdCBiZSBhbiBpbnRlZ2VyID4gMCcpO1xuICAgICAgICB9XG4gICAgICAgIGlmIChmYWN0b3J5Lm1pbiA+IGZhY3RvcnkubWF4KSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ21heCBpcyBzbWFsbGVyIHRoYW4gbWluJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZhY3RvcnkubWF4VXNlcyAhPT0gdW5kZWZpbmVkICYmXG4gICAgICAgICAgICAodHlwZW9mIGZhY3RvcnkubWF4VXNlcyAhPT0gJ251bWJlcicgfHwgZmFjdG9yeS5tYXhVc2VzIDwgMCkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignbWF4VXNlcyBtdXN0IGJlIGFuIGludGVnZXIgPj0gMCcpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuaWRsZVRpbWVvdXRNaWxsaXMgPSBmYWN0b3J5LmlkbGVUaW1lb3V0TWlsbGlzIHx8IDMwMDAwO1xuICAgICAgICB0aGlzLmFjcXVpcmVUaW1lb3V0TWlsbGlzID0gZmFjdG9yeS5hY3F1aXJlVGltZW91dE1pbGxpcyB8fCAzMDAwMDtcbiAgICAgICAgdGhpcy5yZWFwSW50ZXJ2YWxNaWxsaXMgPSBmYWN0b3J5LnJlYXBJbnRlcnZhbE1pbGxpcyB8fCAxMDAwO1xuICAgICAgICB0aGlzLm1heFVzZXNQZXJSZXNvdXJjZSA9IGZhY3RvcnkubWF4VXNlcyB8fCBJbmZpbml0eTtcbiAgICAgICAgdGhpcy5sb2cgPSBmYWN0b3J5LmxvZyB8fCBmYWxzZTtcbiAgICAgICAgdGhpcy5fZmFjdG9yeSA9IGZhY3Rvcnk7XG4gICAgICAgIHRoaXMuX2NvdW50ID0gMDtcbiAgICAgICAgdGhpcy5fZHJhaW5pbmcgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5fcGVuZGluZ0FjcXVpcmVzID0gW107XG4gICAgICAgIHRoaXMuX2luVXNlT2JqZWN0cyA9IFtdO1xuICAgICAgICB0aGlzLl9hdmFpbGFibGVPYmplY3RzID0gW107XG4gICAgICAgIHRoaXMuX3JlbW92ZUlkbGVTY2hlZHVsZWQgPSBmYWxzZTtcbiAgICB9XG4gICAgZ2V0IHNpemUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jb3VudDtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9mYWN0b3J5Lm5hbWU7XG4gICAgfVxuICAgIGdldCBhdmFpbGFibGUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9hdmFpbGFibGVPYmplY3RzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0IHVzaW5nKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5faW5Vc2VPYmplY3RzLmxlbmd0aDtcbiAgICB9XG4gICAgZ2V0IHdhaXRpbmcoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9wZW5kaW5nQWNxdWlyZXMubGVuZ3RoO1xuICAgIH1cbiAgICBnZXQgbWF4U2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZhY3RvcnkubWF4O1xuICAgIH1cbiAgICBnZXQgbWluU2l6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZhY3RvcnkubWluO1xuICAgIH1cbiAgICBfbG9nKG1lc3NhZ2UsIGxldmVsKSB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5sb2cgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHRoaXMubG9nKG1lc3NhZ2UsIGxldmVsKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmICh0aGlzLmxvZykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coYCR7bGV2ZWwudG9VcHBlckNhc2UoKX0gcG9vbCAke3RoaXMubmFtZSB8fCAnJ30gLSAke21lc3NhZ2V9YCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgX3JlbW92ZUlkbGUoKSB7XG4gICAgICAgIGNvbnN0IHRvUmVtb3ZlID0gW107XG4gICAgICAgIGNvbnN0IG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGxldCBpO1xuICAgICAgICBsZXQgYXZhaWxhYmxlID0gdGhpcy5fYXZhaWxhYmxlT2JqZWN0cy5sZW5ndGg7XG4gICAgICAgIGNvbnN0IG1heFJlbW92YWJsZSA9IHRoaXMuc2l6ZSAtIHRoaXMubWluU2l6ZTtcbiAgICAgICAgbGV0IHRpbWVvdXQ7XG4gICAgICAgIHRoaXMuX3JlbW92ZUlkbGVTY2hlZHVsZWQgPSBmYWxzZTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IGF2YWlsYWJsZSAmJiBtYXhSZW1vdmFibGUgPiB0b1JlbW92ZS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgdGltZW91dCA9IHRoaXMuX2F2YWlsYWJsZU9iamVjdHNbaV0udGltZW91dDtcbiAgICAgICAgICAgIGlmIChub3cgPj0gdGltZW91dCkge1xuICAgICAgICAgICAgICAgIHRoaXMuX2xvZygncmVtb3ZlSWRsZSgpIGRlc3Ryb3lpbmcgb2JqIC0gbm93OicgKyBub3cgKyAnIHRpbWVvdXQ6JyArIHRpbWVvdXQsICd2ZXJib3NlJyk7XG4gICAgICAgICAgICAgICAgdG9SZW1vdmUucHVzaCh0aGlzLl9hdmFpbGFibGVPYmplY3RzW2ldLnJlc291cmNlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB0b1JlbW92ZS5mb3JFYWNoKHRoaXMuZGVzdHJveSwgdGhpcyk7XG4gICAgICAgIGF2YWlsYWJsZSA9IHRoaXMuX2F2YWlsYWJsZU9iamVjdHMubGVuZ3RoO1xuICAgICAgICBpZiAoYXZhaWxhYmxlID4gMCkge1xuICAgICAgICAgICAgdGhpcy5fbG9nKCd0aGlzLl9hdmFpbGFibGVPYmplY3RzLmxlbmd0aD0nICsgYXZhaWxhYmxlLCAndmVyYm9zZScpO1xuICAgICAgICAgICAgdGhpcy5fc2NoZWR1bGVSZW1vdmVJZGxlKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLl9sb2coJ3JlbW92ZUlkbGUoKSBhbGwgb2JqZWN0cyByZW1vdmVkJywgJ3ZlcmJvc2UnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBfc2NoZWR1bGVSZW1vdmVJZGxlKCkge1xuICAgICAgICBpZiAoIXRoaXMuX3JlbW92ZUlkbGVTY2hlZHVsZWQpIHtcbiAgICAgICAgICAgIHRoaXMuX3JlbW92ZUlkbGVTY2hlZHVsZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5fcmVtb3ZlSWRsZVRpbWVyID0gc2V0VGltZW91dCgoKSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5fcmVtb3ZlSWRsZSgpO1xuICAgICAgICAgICAgfSwgdGhpcy5yZWFwSW50ZXJ2YWxNaWxsaXMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9kaXNwZW5zZSgpIHtcbiAgICAgICAgbGV0IHdyYXBwZWRSZXNvdXJjZSA9IG51bGw7XG4gICAgICAgIGNvbnN0IHdhaXRpbmdDb3VudCA9IHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5sZW5ndGg7XG4gICAgICAgIHRoaXMuX2xvZyhgZGlzcGVuc2UoKSBjbGllbnRzPSR7d2FpdGluZ0NvdW50fSBhdmFpbGFibGU9JHt0aGlzLl9hdmFpbGFibGVPYmplY3RzLmxlbmd0aH1gLCAnaW5mbycpO1xuICAgICAgICBpZiAod2FpdGluZ0NvdW50IDwgMSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHdoaWxlICh0aGlzLl9hdmFpbGFibGVPYmplY3RzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRoaXMuX2xvZygnZGlzcGVuc2UoKSAtIHJldXNpbmcgb2JqJywgJ3ZlcmJvc2UnKTtcbiAgICAgICAgICAgIHdyYXBwZWRSZXNvdXJjZSA9IHRoaXMuX2F2YWlsYWJsZU9iamVjdHNbdGhpcy5fYXZhaWxhYmxlT2JqZWN0cy5sZW5ndGggLSAxXTtcbiAgICAgICAgICAgIGlmICghdGhpcy5fZmFjdG9yeS52YWxpZGF0ZSh3cmFwcGVkUmVzb3VyY2UucmVzb3VyY2UpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5kZXN0cm95KHdyYXBwZWRSZXNvdXJjZS5yZXNvdXJjZSk7XG4gICAgICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLl9hdmFpbGFibGVPYmplY3RzLnBvcCgpO1xuICAgICAgICAgICAgdGhpcy5fYWRkUmVzb3VyY2VUb0luVXNlT2JqZWN0cyh3cmFwcGVkUmVzb3VyY2UucmVzb3VyY2UsIHdyYXBwZWRSZXNvdXJjZS51c2VDb3VudCk7XG4gICAgICAgICAgICBjb25zdCBkZWZlcnJlZCA9IHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5zaGlmdCgpO1xuICAgICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnJlc29sdmUod3JhcHBlZFJlc291cmNlLnJlc291cmNlKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5zaXplIDwgdGhpcy5tYXhTaXplKSB7XG4gICAgICAgICAgICB0aGlzLl9jcmVhdGVSZXNvdXJjZSgpO1xuICAgICAgICB9XG4gICAgfVxuICAgIF9jcmVhdGVSZXNvdXJjZSgpIHtcbiAgICAgICAgdGhpcy5fY291bnQgKz0gMTtcbiAgICAgICAgdGhpcy5fbG9nKGBjcmVhdGVSZXNvdXJjZSgpIC0gY3JlYXRpbmcgb2JqIC0gY291bnQ9JHt0aGlzLnNpemV9IG1pbj0ke3RoaXMubWluU2l6ZX0gbWF4PSR7dGhpcy5tYXhTaXplfWAsICd2ZXJib3NlJyk7XG4gICAgICAgIHRoaXMuX2ZhY3RvcnlcbiAgICAgICAgICAgIC5jcmVhdGUoKVxuICAgICAgICAgICAgLnRoZW4oKHJlc291cmNlKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWZlcnJlZCA9IHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5zaGlmdCgpO1xuICAgICAgICAgICAgaWYgKGRlZmVycmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYWRkUmVzb3VyY2VUb0luVXNlT2JqZWN0cyhyZXNvdXJjZSwgMCk7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNvdXJjZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGRSZXNvdXJjZVRvQXZhaWxhYmxlT2JqZWN0cyhyZXNvdXJjZSwgMCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkZWZlcnJlZCA9IHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5zaGlmdCgpO1xuICAgICAgICAgICAgdGhpcy5fY291bnQgLT0gMTtcbiAgICAgICAgICAgIGlmICh0aGlzLl9jb3VudCA8IDApXG4gICAgICAgICAgICAgICAgdGhpcy5fY291bnQgPSAwO1xuICAgICAgICAgICAgaWYgKGRlZmVycmVkKSB7XG4gICAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BlbnNlKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIF9hZGRSZXNvdXJjZVRvQXZhaWxhYmxlT2JqZWN0cyhyZXNvdXJjZSwgdXNlQ291bnQpIHtcbiAgICAgICAgY29uc3Qgd3JhcHBlZFJlc291cmNlID0ge1xuICAgICAgICAgICAgcmVzb3VyY2U6IHJlc291cmNlLFxuICAgICAgICAgICAgdXNlQ291bnQ6IHVzZUNvdW50LFxuICAgICAgICAgICAgdGltZW91dDogRGF0ZS5ub3coKSArIHRoaXMuaWRsZVRpbWVvdXRNaWxsaXMsXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuX2F2YWlsYWJsZU9iamVjdHMucHVzaCh3cmFwcGVkUmVzb3VyY2UpO1xuICAgICAgICB0aGlzLl9kaXNwZW5zZSgpO1xuICAgICAgICB0aGlzLl9zY2hlZHVsZVJlbW92ZUlkbGUoKTtcbiAgICB9XG4gICAgX2FkZFJlc291cmNlVG9JblVzZU9iamVjdHMocmVzb3VyY2UsIHVzZUNvdW50KSB7XG4gICAgICAgIGNvbnN0IHdyYXBwZWRSZXNvdXJjZSA9IHtcbiAgICAgICAgICAgIHJlc291cmNlOiByZXNvdXJjZSxcbiAgICAgICAgICAgIHVzZUNvdW50OiB1c2VDb3VudCxcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5faW5Vc2VPYmplY3RzLnB1c2god3JhcHBlZFJlc291cmNlKTtcbiAgICB9XG4gICAgX2Vuc3VyZU1pbmltdW0oKSB7XG4gICAgICAgIGxldCBpLCBkaWZmO1xuICAgICAgICBpZiAoIXRoaXMuX2RyYWluaW5nICYmIHRoaXMuc2l6ZSA8IHRoaXMubWluU2l6ZSkge1xuICAgICAgICAgICAgZGlmZiA9IHRoaXMubWluU2l6ZSAtIHRoaXMuc2l6ZTtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBkaWZmOyBpKyspIHtcbiAgICAgICAgICAgICAgICB0aGlzLl9jcmVhdGVSZXNvdXJjZSgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGFjcXVpcmUoKSB7XG4gICAgICAgIGlmICh0aGlzLl9kcmFpbmluZykge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcigncG9vbCBpcyBkcmFpbmluZyBhbmQgY2Fubm90IGFjY2VwdCB3b3JrJykpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGRlZmVycmVkID0gbmV3IERlZmVycmVkXzEuRGVmZXJyZWQoKTtcbiAgICAgICAgZGVmZXJyZWQucmVnaXN0ZXJUaW1lb3V0KHRoaXMuYWNxdWlyZVRpbWVvdXRNaWxsaXMsICgpID0+IHtcbiAgICAgICAgICAgIHRoaXMuX3BlbmRpbmdBY3F1aXJlcyA9IHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5maWx0ZXIoKHBlbmRpbmcpID0+IHBlbmRpbmcgIT09IGRlZmVycmVkKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5wdXNoKGRlZmVycmVkKTtcbiAgICAgICAgdGhpcy5fZGlzcGVuc2UoKTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2UoKTtcbiAgICB9XG4gICAgcmVsZWFzZShyZXNvdXJjZSkge1xuICAgICAgICBpZiAodGhpcy5fYXZhaWxhYmxlT2JqZWN0cy5zb21lKChyZXNvdXJjZVdpdGhUaW1lb3V0KSA9PiByZXNvdXJjZVdpdGhUaW1lb3V0LnJlc291cmNlID09PSByZXNvdXJjZSkpIHtcbiAgICAgICAgICAgIHRoaXMuX2xvZygncmVsZWFzZSBjYWxsZWQgdHdpY2UgZm9yIHRoZSBzYW1lIHJlc291cmNlOiAnICsgbmV3IEVycm9yKCkuc3RhY2ssICdlcnJvcicpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5faW5Vc2VPYmplY3RzLmZpbmRJbmRleCgod3JhcHBlZFJlc291cmNlKSA9PiB3cmFwcGVkUmVzb3VyY2UucmVzb3VyY2UgPT09IHJlc291cmNlKTtcbiAgICAgICAgaWYgKGluZGV4IDwgMCkge1xuICAgICAgICAgICAgdGhpcy5fbG9nKCdhdHRlbXB0IHRvIHJlbGVhc2UgYW4gaW52YWxpZCByZXNvdXJjZTogJyArIG5ldyBFcnJvcigpLnN0YWNrLCAnZXJyb3InKTtcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB3cmFwcGVkUmVzb3VyY2UgPSB0aGlzLl9pblVzZU9iamVjdHNbaW5kZXhdO1xuICAgICAgICB3cmFwcGVkUmVzb3VyY2UudXNlQ291bnQgKz0gMTtcbiAgICAgICAgaWYgKHdyYXBwZWRSZXNvdXJjZS51c2VDb3VudCA+PSB0aGlzLm1heFVzZXNQZXJSZXNvdXJjZSkge1xuICAgICAgICAgICAgdGhpcy5fbG9nKCdyZWxlYXNlKCkgZGVzdHJveWluZyBvYmogLSB1c2VDb3VudDonICtcbiAgICAgICAgICAgICAgICB3cmFwcGVkUmVzb3VyY2UudXNlQ291bnQgK1xuICAgICAgICAgICAgICAgICcgbWF4VXNlc1BlclJlc291cmNlOicgK1xuICAgICAgICAgICAgICAgIHRoaXMubWF4VXNlc1BlclJlc291cmNlLCAndmVyYm9zZScpO1xuICAgICAgICAgICAgdGhpcy5kZXN0cm95KHdyYXBwZWRSZXNvdXJjZS5yZXNvdXJjZSk7XG4gICAgICAgICAgICB0aGlzLl9kaXNwZW5zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5faW5Vc2VPYmplY3RzLnNwbGljZShpbmRleCwgMSk7XG4gICAgICAgICAgICB0aGlzLl9hZGRSZXNvdXJjZVRvQXZhaWxhYmxlT2JqZWN0cyh3cmFwcGVkUmVzb3VyY2UucmVzb3VyY2UsIHdyYXBwZWRSZXNvdXJjZS51c2VDb3VudCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgYXN5bmMgZGVzdHJveShyZXNvdXJjZSkge1xuICAgICAgICBjb25zdCBhdmFpbGFibGUgPSB0aGlzLl9hdmFpbGFibGVPYmplY3RzLmxlbmd0aDtcbiAgICAgICAgY29uc3QgdXNpbmcgPSB0aGlzLl9pblVzZU9iamVjdHMubGVuZ3RoO1xuICAgICAgICB0aGlzLl9hdmFpbGFibGVPYmplY3RzID0gdGhpcy5fYXZhaWxhYmxlT2JqZWN0cy5maWx0ZXIoKG9iamVjdCkgPT4gb2JqZWN0LnJlc291cmNlICE9PSByZXNvdXJjZSk7XG4gICAgICAgIHRoaXMuX2luVXNlT2JqZWN0cyA9IHRoaXMuX2luVXNlT2JqZWN0cy5maWx0ZXIoKG9iamVjdCkgPT4gb2JqZWN0LnJlc291cmNlICE9PSByZXNvdXJjZSk7XG4gICAgICAgIGlmIChhdmFpbGFibGUgPT09IHRoaXMuX2F2YWlsYWJsZU9iamVjdHMubGVuZ3RoICYmXG4gICAgICAgICAgICB1c2luZyA9PT0gdGhpcy5faW5Vc2VPYmplY3RzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5fZW5zdXJlTWluaW11bSgpO1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuX2NvdW50IC09IDE7XG4gICAgICAgIGlmICh0aGlzLl9jb3VudCA8IDApXG4gICAgICAgICAgICB0aGlzLl9jb3VudCA9IDA7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLl9mYWN0b3J5LmRlc3Ryb3kocmVzb3VyY2UpO1xuICAgICAgICB9XG4gICAgICAgIGZpbmFsbHkge1xuICAgICAgICAgICAgdGhpcy5fZW5zdXJlTWluaW11bSgpO1xuICAgICAgICAgICAgaWYgKCF0aGlzLl9kcmFpbmluZykge1xuICAgICAgICAgICAgICAgIHByb2Nlc3MubmV4dFRpY2soKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwZW5zZSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGRyYWluKCkge1xuICAgICAgICB0aGlzLl9sb2coJ2RyYWluaW5nJywgJ2luZm8nKTtcbiAgICAgICAgdGhpcy5fZHJhaW5pbmcgPSB0cnVlO1xuICAgICAgICBjb25zdCBjaGVjayA9IChjYWxsYmFjaykgPT4ge1xuICAgICAgICAgICAgaWYgKHRoaXMuX3BlbmRpbmdBY3F1aXJlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fZGlzcGVuc2UoKTtcbiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY2hlY2soY2FsbGJhY2spO1xuICAgICAgICAgICAgICAgIH0sIDEwMCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHRoaXMuX2F2YWlsYWJsZU9iamVjdHMubGVuZ3RoICE9PSB0aGlzLl9jb3VudCkge1xuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjaGVjayhjYWxsYmFjayk7XG4gICAgICAgICAgICAgICAgfSwgMTAwKTtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYWxsYmFjaygpO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IGNoZWNrKHJlc29sdmUpKTtcbiAgICB9XG4gICAgYXN5bmMgZGVzdHJveUFsbE5vdygpIHtcbiAgICAgICAgdGhpcy5fbG9nKCdmb3JjZSBkZXN0cm95aW5nIGFsbCBvYmplY3RzJywgJ2luZm8nKTtcbiAgICAgICAgdGhpcy5fcmVtb3ZlSWRsZVNjaGVkdWxlZCA9IGZhbHNlO1xuICAgICAgICBjbGVhclRpbWVvdXQodGhpcy5fcmVtb3ZlSWRsZVRpbWVyKTtcbiAgICAgICAgY29uc3QgcmVzb3VyY2VzID0gdGhpcy5fYXZhaWxhYmxlT2JqZWN0cy5tYXAoKHJlc291cmNlKSA9PiByZXNvdXJjZS5yZXNvdXJjZSk7XG4gICAgICAgIGNvbnN0IGVycm9ycyA9IFtdO1xuICAgICAgICBmb3IgKGNvbnN0IHJlc291cmNlIG9mIHJlc291cmNlcykge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB0aGlzLmRlc3Ryb3kocmVzb3VyY2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGV4KSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fbG9nKCdFcnJvciBkZXN0cm95aW5nIHJlc291cmNlOiAnICsgZXguc3RhY2ssICdlcnJvcicpO1xuICAgICAgICAgICAgICAgIGVycm9ycy5wdXNoKGV4KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBpZiAoZXJyb3JzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBBZ2dyZWdhdGVFcnJvcl8xLkFnZ3JlZ2F0ZUVycm9yKGVycm9ycyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLlBvb2wgPSBQb29sO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UG9vbC5qcy5tYXAiXSwibmFtZXMiOlsiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJleHBvcnRzIiwidmFsdWUiLCJQb29sIiwiRGVmZXJyZWRfMSIsInJlcXVpcmUiLCJBZ2dyZWdhdGVFcnJvcl8xIiwiY29uc3RydWN0b3IiLCJmYWN0b3J5IiwibG9nIiwiY3JlYXRlIiwiRXJyb3IiLCJkZXN0cm95IiwidmFsaWRhdGUiLCJtaW4iLCJNYXRoIiwicm91bmQiLCJtYXgiLCJtYXhVc2VzIiwidW5kZWZpbmVkIiwiaWRsZVRpbWVvdXRNaWxsaXMiLCJhY3F1aXJlVGltZW91dE1pbGxpcyIsInJlYXBJbnRlcnZhbE1pbGxpcyIsIm1heFVzZXNQZXJSZXNvdXJjZSIsIkluZmluaXR5IiwiX2ZhY3RvcnkiLCJfY291bnQiLCJfZHJhaW5pbmciLCJfcGVuZGluZ0FjcXVpcmVzIiwiX2luVXNlT2JqZWN0cyIsIl9hdmFpbGFibGVPYmplY3RzIiwiX3JlbW92ZUlkbGVTY2hlZHVsZWQiLCJzaXplIiwibmFtZSIsImF2YWlsYWJsZSIsImxlbmd0aCIsInVzaW5nIiwid2FpdGluZyIsIm1heFNpemUiLCJtaW5TaXplIiwiX2xvZyIsIm1lc3NhZ2UiLCJsZXZlbCIsImNvbnNvbGUiLCJ0b1VwcGVyQ2FzZSIsIl9yZW1vdmVJZGxlIiwidG9SZW1vdmUiLCJub3ciLCJEYXRlIiwiaSIsIm1heFJlbW92YWJsZSIsInRpbWVvdXQiLCJwdXNoIiwicmVzb3VyY2UiLCJmb3JFYWNoIiwiX3NjaGVkdWxlUmVtb3ZlSWRsZSIsIl9yZW1vdmVJZGxlVGltZXIiLCJzZXRUaW1lb3V0IiwiX2Rpc3BlbnNlIiwid3JhcHBlZFJlc291cmNlIiwid2FpdGluZ0NvdW50IiwicG9wIiwiX2FkZFJlc291cmNlVG9JblVzZU9iamVjdHMiLCJ1c2VDb3VudCIsImRlZmVycmVkIiwic2hpZnQiLCJyZXNvbHZlIiwiX2NyZWF0ZVJlc291cmNlIiwidGhlbiIsIl9hZGRSZXNvdXJjZVRvQXZhaWxhYmxlT2JqZWN0cyIsImNhdGNoIiwiZXJyb3IiLCJyZWplY3QiLCJwcm9jZXNzIiwibmV4dFRpY2siLCJfZW5zdXJlTWluaW11bSIsImRpZmYiLCJhY3F1aXJlIiwiUHJvbWlzZSIsIkRlZmVycmVkIiwicmVnaXN0ZXJUaW1lb3V0IiwiZmlsdGVyIiwicGVuZGluZyIsInByb21pc2UiLCJyZWxlYXNlIiwic29tZSIsInJlc291cmNlV2l0aFRpbWVvdXQiLCJzdGFjayIsImluZGV4IiwiZmluZEluZGV4Iiwic3BsaWNlIiwib2JqZWN0IiwiZHJhaW4iLCJjaGVjayIsImNhbGxiYWNrIiwiZGVzdHJveUFsbE5vdyIsImNsZWFyVGltZW91dCIsInJlc291cmNlcyIsIm1hcCIsImVycm9ycyIsImV4IiwiQWdncmVnYXRlRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/Pool.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js":
/*!*********************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/TimeoutError.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.TimeoutError = void 0;\nclass TimeoutError extends Error {\n}\nexports.TimeoutError = TimeoutError; //# sourceMappingURL=TimeoutError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL1RpbWVvdXRFcnJvci5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiQSw4Q0FBNkM7SUFBRUcsT0FBTztBQUFLLENBQUMsRUFBQztBQUM3REQsb0JBQW9CLEdBQUcsS0FBSztBQUM1QixNQUFNRSxxQkFBcUJDO0FBQzNCO0FBQ0FILG9CQUFvQixHQUFHRSxjQUN2Qix3Q0FBd0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hbWktc3VwZXItYXBwLy4vbm9kZV9tb2R1bGVzL3NlcXVlbGl6ZS1wb29sL2xpYi9UaW1lb3V0RXJyb3IuanM/YWE0YyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuVGltZW91dEVycm9yID0gdm9pZCAwO1xuY2xhc3MgVGltZW91dEVycm9yIGV4dGVuZHMgRXJyb3Ige1xufVxuZXhwb3J0cy5UaW1lb3V0RXJyb3IgPSBUaW1lb3V0RXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1UaW1lb3V0RXJyb3IuanMubWFwIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiVGltZW91dEVycm9yIiwiRXJyb3IiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/sequelize-pool/lib/index.js":
/*!**************************************************!*\
  !*** ./node_modules/sequelize-pool/lib/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({\n    value: true\n}));\nexports.Pool = exports.AggregateError = exports.TimeoutError = void 0;\nvar TimeoutError_1 = __webpack_require__(/*! ./TimeoutError */ \"(rsc)/./node_modules/sequelize-pool/lib/TimeoutError.js\");\nObject.defineProperty(exports, \"TimeoutError\", ({\n    enumerable: true,\n    get: function() {\n        return TimeoutError_1.TimeoutError;\n    }\n}));\nvar AggregateError_1 = __webpack_require__(/*! ./AggregateError */ \"(rsc)/./node_modules/sequelize-pool/lib/AggregateError.js\");\nObject.defineProperty(exports, \"AggregateError\", ({\n    enumerable: true,\n    get: function() {\n        return AggregateError_1.AggregateError;\n    }\n}));\nvar Pool_1 = __webpack_require__(/*! ./Pool */ \"(rsc)/./node_modules/sequelize-pool/lib/Pool.js\");\nObject.defineProperty(exports, \"Pool\", ({\n    enumerable: true,\n    get: function() {\n        return Pool_1.Pool;\n    }\n})); //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvc2VxdWVsaXplLXBvb2wvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2JBLDhDQUE2QztJQUFFRyxPQUFPO0FBQUssQ0FBQyxFQUFDO0FBQzdERCxZQUFZLEdBQUdBLHNCQUFzQixHQUFHQSxvQkFBb0IsR0FBRyxLQUFLO0FBQ3BFLElBQUlLLGlCQUFpQkMsbUJBQU9BLENBQUMsK0VBQWdCO0FBQzdDUixnREFBK0M7SUFBRVMsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0gsZUFBZUQsWUFBWTtJQUFFO0FBQUUsQ0FBQyxFQUFDO0FBQzlILElBQUlLLG1CQUFtQkgsbUJBQU9BLENBQUMsbUZBQWtCO0FBQ2pEUixrREFBaUQ7SUFBRVMsWUFBWTtJQUFNQyxLQUFLO1FBQWMsT0FBT0MsaUJBQWlCTixjQUFjO0lBQUU7QUFBRSxDQUFDLEVBQUM7QUFDcEksSUFBSU8sU0FBU0osbUJBQU9BLENBQUMsK0RBQVE7QUFDN0JSLHdDQUF1QztJQUFFUyxZQUFZO0lBQU1DLEtBQUs7UUFBYyxPQUFPRSxPQUFPUixJQUFJO0lBQUU7QUFBRSxDQUFDLEVBQUMsRUFDdEcsaUNBQWlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYW1pLXN1cGVyLWFwcC8uL25vZGVfbW9kdWxlcy9zZXF1ZWxpemUtcG9vbC9saWIvaW5kZXguanM/YmVkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuUG9vbCA9IGV4cG9ydHMuQWdncmVnYXRlRXJyb3IgPSBleHBvcnRzLlRpbWVvdXRFcnJvciA9IHZvaWQgMDtcbnZhciBUaW1lb3V0RXJyb3JfMSA9IHJlcXVpcmUoXCIuL1RpbWVvdXRFcnJvclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlRpbWVvdXRFcnJvclwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gVGltZW91dEVycm9yXzEuVGltZW91dEVycm9yOyB9IH0pO1xudmFyIEFnZ3JlZ2F0ZUVycm9yXzEgPSByZXF1aXJlKFwiLi9BZ2dyZWdhdGVFcnJvclwiKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIkFnZ3JlZ2F0ZUVycm9yXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBBZ2dyZWdhdGVFcnJvcl8xLkFnZ3JlZ2F0ZUVycm9yOyB9IH0pO1xudmFyIFBvb2xfMSA9IHJlcXVpcmUoXCIuL1Bvb2xcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQb29sXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBQb29sXzEuUG9vbDsgfSB9KTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6WyJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsIlBvb2wiLCJBZ2dyZWdhdGVFcnJvciIsIlRpbWVvdXRFcnJvciIsIlRpbWVvdXRFcnJvcl8xIiwicmVxdWlyZSIsImVudW1lcmFibGUiLCJnZXQiLCJBZ2dyZWdhdGVFcnJvcl8xIiwiUG9vbF8xIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/sequelize-pool/lib/index.js\n");

/***/ })

};
;